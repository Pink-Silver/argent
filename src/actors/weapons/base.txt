// --------------------------------------------------------------------------
//
// ARGENT: Base Weapon Definitions
//
// --------------------------------------------------------------------------

ACTOR ArgWeapon : DoomWeapon
{
	Inventory.PickupSound "items/weapon"
	Weapon.UpSound   "weapons/swap"
	Weapon.BobStyle  "InverseSmooth"
	Weapon.BobSpeed  2.00
	Weapon.BobRangeX 0.75
	Weapon.BobRangeY 0.50
	Weapon.SelectionOrder 9999999
	Scale 0.75
	
	+WEAPON.NOALERT
	
	States
	{
	Spawn:
		TNT1 A 1
		Stop
	Ready:
		TNT1 A 1 A_WeaponReady
		Loop
	Select:
	SelectLoop:
		"####" "#" 0 A_Raise
		"####" "#" 1 A_Raise
		Loop
	Deselect:
	DeselectLoop:
		"####" "#" 0 A_Lower
		"####" "#" 1 A_Lower
		Loop
	Fire:
		TNT1 A 1
		Goto Ready
	}
}

ACTOR ArgModWeapon : ArgWeapon
{
	+WEAPON.NOALERT
	States
	{
	
	/* Ready Mod-Jump */
	
	Ready:
		"####" "#" 0 A_ClearReFire
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 1), "Mod1Ready")
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 2), "Mod2Ready")
		"####" "#" 0 A_Jump(256, "Mod0Ready")
	Mod0Ready:
	Mod1Ready:
	Mod2Ready:
	ReadyLoop:
		"####" "#" 1 A_WeaponReady(WRF_ALLOWRELOAD)
		Loop
		
	/* Select Mod-Jump */
	
	Select:
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 1), "Mod1Select")
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 2), "Mod2Select")
		"####" "#" 0 A_Jump(256, "Mod0Select")
	Mod0Select:
	Mod1Select:
	Mod2Select:
		Goto SelectLoop
		
	/* Fire Mod-Jump -- need to make sure we're not holding down altfire. */
	
	Fire:
		"####" "#" 0 A_JumpIf(CallACS("SynthAltFire") == false, "Mod0Fire")
		Goto DontFire
	Mod0Fire:
		"####" "#" 1
		Goto Ready
		
	/* Deselect doesn't need a mod jump since it's just "####" anyway. */
	
	Deselect:
		"####" "#" 0 {
			A_ZoomFactor(1.0);
			A_SetCrosshair(0);
		}
		Goto DeselectLoop
		
	/* Mod Swapping. Uses the Reload bind for convenience. */
	
	Reload:
		// call the swap function and start the animation if successful
		"####" "#" 0 A_JumpIf(CallACS("SwapMod"), "ModSwapDown")
		Goto DontSwap
	ModSwapDown:
		// lower the weapon
		"####" "#" 1 A_WeaponOffset(0.0, 44.0) // uservars can suck it, apparently
		"####" "#" 1 A_WeaponOffset(0.0, 56.0)
		"####" "#" 1 A_WeaponOffset(0.0, 68.0)
		"####" "#" 1 A_WeaponOffset(0.0, 80.0)
		"####" "#" 1 A_WeaponOffset(0.0, 92.0)
		"####" "#" 1 A_WeaponOffset(0.0,104.0)
		"####" "#" 1 A_WeaponOffset(0.0,116.0)
		"####" "#" 1 A_WeaponOffset(0.0,128.0)
		// jump to the unmodded state -- generally a handless version of Ready
		"####" "#" 0 {
			ACS_NamedExecuteAlways("ClearModCooldown");
			if(CallACS("ModSelected", 1)) {
				return state("Mod1Raise");
			} else {
				return state("Mod2Raise");
			}
		}
	Mod1Raise:
	Mod2Raise:
		"####" "#" 0 A_Jump(256, "Mod0Swap") // legacy; may remove
	Mod0Swap:
	ModSwapUp:
		// raise the weapon
		"####" "#" 1 A_WeaponOffset(0.0,116.0, WOF_KEEPX)
		"####" "#" 1 A_WeaponOffset(0.0,104.0, WOF_KEEPX)
		"####" "#" 1 A_WeaponOffset(0.0, 92.0, WOF_KEEPX)
		"####" "#" 1 A_WeaponOffset(0.0, 80.0, WOF_KEEPX)
		"####" "#" 1 A_WeaponOffset(0.0, 68.0, WOF_KEEPX)
		"####" "#" 1 A_WeaponOffset(0.0, 56.0, WOF_KEEPX)
		"####" "#" 1 A_WeaponOffset(0.0, 44.0, WOF_KEEPX)
		"####" "#" 0 A_WeaponOffset(0.0, 32.0, WOF_KEEPX)
		// start the actual swap animation
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 1), "Mod1Swap")
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 2), "Mod2Swap")
	Mod1Swap:
	Mod2Swap:
	DontSwap:
		// placeholder in case it's undefined oh no
		"####" "#" 1 A_WeaponReady
		Goto Ready
		
	/* Mod Firing. Maximum Dangertime. */
	
	AltFire:
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 1) && CallACS("CheckModCooldown"), "Mod1Up")
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 2) && CallACS("CheckModCooldown"), "Mod2Up")
		Goto DontFire
	AltHold:
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 1), "Mod1Hold")
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 2), "Mod2Hold")
		Goto DontFire
	ModDown:
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 1), "Mod1Down")
		"####" "#" 0 A_JumpIf(CallACS("ModSelected", 2), "Mod2Down")
		Goto DontFire
	Mod1Up:
	Mod2Up:
	Mod1Hold:
	Mod2Hold:
	Mod1Down:
	Mod2Down:
	DontFire:
		"####" "#" 1 A_WeaponReady(WRF_NOFIRE)
		Goto Ready
	Cooldown:
		"####" "#" 0 {
			A_ClearReFire;
			ACS_NamedExecuteAlways("StartModCooldown");
		}
		Goto Ready
	}
}

ACTOR ArgModToken : ArgToken
{
	Inventory.MaxAmount 2
}
