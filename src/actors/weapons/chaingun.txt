// --------------------------------------------------------------------------
//
// ARGENT: Chaingun
//
// --------------------------------------------------------------------------

ACTOR ArgChaingun : ArgModWeapon
{
	Weapon.SelectionOrder 2
	Weapon.AmmoUse 1
	Weapon.AmmoUse2 1
	Weapon.AmmoGive 20
	Weapon.AmmoType "Clip"
	Weapon.AmmoType2 "Clip"
	Inventory.Icon "graphics/hud/weapon-chaingun.png"
	Inventory.PickupMessage "$ARG_GOT_CHAINGUN"
	Tag "$ARG_TAG_CHAINGUN"
	Obituary "$ARG_OB_CHAINGUN"
	DamageType "ArgChaingun"

	States
	{
	Spawn:
		CHGP A -1
		Stop
	Ready:
		CHGG A 0
		Goto Super::Ready
	Deselect:
		"####" "#" 0 {
			A_SetSpeed(1.0);
			A_StopSound(CHAN_WEAPON);
			A_TakeInventory("ArgChaingunSpinnyToken", 6);
		}
		Goto DeselectLoop
		
	/* Unmodded + Primary */

	Mod0Select:
		CHGG A 0
		Goto SelectLoop
	Mod0Swap:
		CHGG A 0
		Goto ModSwapUp
	Mod0Ready:
		CHGG A 0
		Goto ReadyLoop
	Mod0Fire:
		CHGF A 0 Bright {
			A_GunFlash;
			A_AlertMonsters;
			A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");

			if(CountInv("ArgChaingunShootyToken") == 0) {
				A_GiveInventory("ArgChaingunShootyToken");
				A_PlaySound("weapons/chaingun/fire", CHAN_5);
			} else {
				A_TakeInventory("ArgChaingunShootyToken");
				A_PlaySound("weapons/chaingun/fire", CHAN_6);
			}
			return A_JumpIfInventory("ArgChaingunSpinnyToken", 1, "Mod0Anim1");
		}
		CHGF A     1 Bright { A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5)); A_PlaySound("weapons/chaingun/spinup", CHAN_WEAPON); }
		CHGG A     1          A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5))
		CHGG A     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5))
		CHGG B     1          A_WeaponOffset(0.0                     , 32.0                     )
		CHGG B     2
		CHGG CD    3
		Goto Mod0FireEnd
	Mod0Anim1:
		CHGF A 1 Bright {
			A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5));
			if(CountInv("ArgChaingunSpinnyToken") >= 2) {
				return state("Mod0Anim2");
			}
			A_PlaySound("weapons/chaingun/spinloop", CHAN_WEAPON, 1.0, 1);
			return state(0);
		}
		CHGG A     1          A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5))
		CHGG B     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5))
		CHGG B     1          A_WeaponOffset(0.0                     , 32.0                     )
		CHGG CDA   2
		Goto Mod0FireEnd
	Mod0Anim2:
		CHGF B     1 Bright { A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 3, "Mod0Anim3"); }
		CHGG B     1          A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5))
		CHGG C     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5))
		CHGG C     1          A_WeaponOffset(0.0                     , 32.0                     )
		CHGG D     2
		CHGG AB    1
		Goto Mod0FireEnd
	Mod0Anim3:
		CHGF C     1 Bright { A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 4, "Mod0Anim4"); }
		CHGF D     1 Bright   A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5))
		CHGG A     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5))
		CHGG B     1          A_WeaponOffset(0.0                     , 32.0                     )
		CHGG CD    1
		Goto Mod0FireEnd
	Mod0Anim4:
		CHGF A     1 Bright { A_WeaponOffset(3.0 + frandom(-0.7, 0.7), 35.0 + frandom(-0.7, 0.7)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 5, "Mod0Anim5"); }
		CHGF B     1 Bright   A_WeaponOffset(2.0 + frandom(-0.6, 0.6), 34.0 + frandom(-0.6, 0.6))
		CHGG C     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5))
		CHGG D     1          A_WeaponOffset(0.0                     , 32.0                     )
		CHGG A     1
		Goto Mod0FireEnd
	Mod0Anim5:
		CHGF B     1 Bright { A_WeaponOffset(3.0 + frandom(-0.9, 0.9), 35.0 + frandom(-0.9, 0.9)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 6, "Mod0Anim6"); }
		CHGF C     1 Bright   A_WeaponOffset(2.0 + frandom(-0.7, 0.7), 34.0 + frandom(-0.7, 0.7))
		CHGF D     1 Bright   A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5))
		CHGG A     1          A_WeaponOffset(0.0                     , 32.0                     )
		Goto Mod0FireEnd
	Mod0Anim6:
		CHGF B     1 Bright   A_WeaponOffset(3.0 + frandom(-0.9, 0.9), 35.0 + frandom(-0.9, 0.9))
		CHGF C     1 Bright   A_WeaponOffset(2.0 + frandom(-0.7, 0.7), 34.0 + frandom(-0.7, 0.7))
		CHGF D     1 Bright { A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5)); A_FireBullets(6.8, 1.0, -1, 7, "ArgBulletPuff"); }
		CHGF A     1 Bright   A_WeaponOffset(0.0                     , 32.0                     )
		Goto Mod0FireEnd
	Mod0FireEnd:
		CHGG A 0 {
			A_WeaponOffset(0.0, 32.0);
			A_GiveInventory("ArgChaingunSpinnyToken", 1);
			return A_Refire;
		}
		CHGG A 1 A_TakeInventory("ArgChaingunSpinnyToken", 6)
		CHGG BCD 1 
		CHGG A 2 A_PlaySound("weapons/chaingun/spindown", CHAN_WEAPON)
		CHGG BCD 2 
		Goto Ready
	Flash:
		TNT1 A 1 Bright A_Light2
		TNT1 A 1 Bright A_Light1
		Goto LightDone
		
	/* Mod 1: Gatling Rotator */
		
	Mod1Select:
		CHGG A 0
		Goto SelectLoop
	Mod1Swap:
		CHGG A 0 A_PlaySound("weapons/chaingun/mod1swap", CHAN_AUTO)
	Mod1Ready:
		CHGG A 0
		Goto ReadyLoop
	Mod1Up:
	Mod1Hold:
		CHGG A 3 {
			if(CallACS("SynthFire")) {
				return state("Mod0Fire");
			} else if(CountInv("ArgChaingunSpinnyToken") >= 1) {
				return state("Mod1Anim1");
			}
			A_PlaySound("weapons/chaingun/spinup", CHAN_WEAPON);
			return state(0);
		}
		CHGG BCD 3
		Goto Mod0FireEnd
	Mod1Anim1:
		CHGG A 1 Bright {
			if(CountInv("ArgChaingunSpinnyToken") >= 2) {
				return state("Mod1Anim2");
			}
			A_PlaySound("weapons/chaingun/spinloop", CHAN_WEAPON, 1.0, 1);
			return state(0);
		}
		CHGG A 1
		CHGG BCDA 2
		Goto Mod0FireEnd
	Mod1Anim2:
		CHGG B  2 A_JumpIfInventory("ArgChaingunSpinnyToken", 3, "Mod1Anim3")
		CHGG CD 2
		CHGG AB 1
		Goto Mod0FireEnd
	Mod1Anim3:
		CHGG C 1 A_JumpIfInventory("ArgChaingunSpinnyToken", 4, "Mod1Anim4")
		CHGG DABCD  1
		Goto Mod0FireEnd
	Mod1Anim4:
		CHGG A 1 A_JumpIfInventory("ArgChaingunSpinnyToken", 5, "Mod1Anim5")
		CHGG BCDA 1
		Goto Mod0FireEnd
	Mod1Anim5:
		CHGG B 1 A_JumpIfInventory("ArgChaingunSpinnyToken", 6, "Mod1Anim6")
		CHGG CDA 1
		Goto Mod0FireEnd
	Mod1Anim6:
		CHGG BCDA 1
		Goto Mod0FireEnd
		
	/* Mod 2: Mobile Turret */

	Mod2Select:
		CHGG A 0
		Goto SelectLoop
	Mod2Swap:
		CHGG A 0 A_PlaySound("weapons/chaingun/mod2swap", CHAN_AUTO)
	Mod2Ready:
		CHGG A 0
		Goto ReadyLoop
	Mod2Up:
		CHGG A 1 {
			A_SetSpeed(0.5);
			A_PlaySound("weapons/chaingun/mod2up", CHAN_AUTO);
		}
		CHGG A 19
	Mod2Hold:
		"####" "#" 1 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "Mod2Fire")
		"####" "#" 0 A_Refire
	Mod2Down:
		CHGG A 1 {
			A_SetSpeed(1.0);
			A_PlaySound("weapons/chaingun/mod2down", CHAN_AUTO);
		}
		CHGG A 19
		Goto Ready
	Mod2Fire:
		CHGF A 0 A_PlaySound("weapons/chaingun/mod2fire", CHAN_WEAPON)
		CHGF ABCD 1 Bright {
			A_GunFlash;
			A_AlertMonsters;
			A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");
			A_WeaponOffset(0.0 + frandom(-1.5, 1.5), 34.0 + frandom(-1.0, 1.0));
		}
		CHGF A 0 {
			if(CountInv("Clip") > 0 && GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) {
				A_PlaySound("weapons/chaingun/mod2loop", CHAN_WEAPON, 1.0, 1);
				return state("Mod2FireLoop");
			}
			return state(0);
		}
		Goto Mod2FireEnd
	Mod2FireLoop:
		CHGF ABCD 1 Bright {
			A_GunFlash("CrazyFlash");
			A_AlertMonsters;
			A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");
			A_WeaponOffset(0.0 + frandom(-1.5, 1.5), 34.0 + frandom(-1.0, 1.0));
		}
	Mod2FireEnd:
		CHGG A 1 {
			if(CountInv("Clip") > 0 && GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) {
				return state("Mod2FireLoop");
			}
			A_WeaponOffset(1.0, 32.0);
			A_PlaySound("weapons/chaingun/spindown", CHAN_WEAPON);
			return state(0);
		}
		CHGG BCD 1 
		CHGG ABCD 2 
		CHGG A 0 A_Refire
		Goto Mod2Down
	CrazyFlash:
		TNT1 A 1 Bright A_Light(random(0,2))
		Goto LightDone
	}
}
ACTOR ArgChaingunModSelected : ArgModToken {}
ACTOR ArgChaingunMod1Enabled : ArgToken    {}
ACTOR ArgChaingunMod2Enabled : ArgToken    {}
ACTOR ArgChaingunModCooldown : ArgToken    {}
ACTOR ArgChaingunShootyToken : ArgToken    {} // extra token for sound control
ACTOR ArgChaingunSpinnyToken : ArgToken    { Inventory.MaxAmount 6 }
