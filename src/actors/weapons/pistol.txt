// --------------------------------------------------------------------------
//
// ARGENT: Pistol
//
// --------------------------------------------------------------------------

ACTOR ArgPistol : ArgWeapon replaces Pistol
{
	Weapon.SelectionOrder 8
	Inventory.Icon "graphics/hud/weapon-pistol.png"
	Inventory.PickupMessage "$ARG_GOT_PISTOL"
	Tag "$ARG_TAG_PISTOL"
	Obituary "$ARG_OB_PISTOL"
	DamageType "ArgPistol"
	
	+WEAPON.NOALERT
	+WEAPON.NOAUTOFIRE
	+WEAPON.WIMPY_WEAPON
	
	States
	{
	Spawn:
		PISP A -1
		Stop
	Ready:
		PISG A 1 A_WeaponReady
		Loop
	Select:
		PISG A 0
		Goto SelectLoop
	Deselect:
		PISG A 0 {
			A_StopSound(CHAN_WEAPON);
			A_TakeInventory("ArgPistolCharge"     , 45);
			A_TakeInventory("ArgPistolChargeSound", 30);
		}
		Goto DeselectLoop
	Fire:
		PISF A 1 Bright {
			A_GunFlash;
			A_AlertMonsters;
			A_FireBullets(1.5, 1, 1, 5, "ArgPistolPuff");
			A_WeaponReady(WRF_NOFIRE);
			
			if(CountInv("ArgPistolShootyToken") == 0) {
				A_GiveInventory("ArgPistolShootyToken");
				A_PlaySound("weapons/pistol/fire", CHAN_5);
			} else {
				A_TakeInventory("ArgPistolShootyToken");
				A_PlaySound("weapons/pistol/fire", CHAN_6);
			}
		}
		PISF B 1   A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH) 
		PISF C 1 { A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH); A_WeaponOffset(1.0 + frandom(-0.25, 0.25), 33.0 + frandom(-0.25, 0.25)); }
		PISF C 1 { A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH); A_WeaponOffset(2.0 + frandom( 0.00, 1.00), 37.0 + frandom( 0.00, 1.00)); }
		PISF B 1 { A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH); A_WeaponOffset(3.0 + frandom( 0.00, 1.00), 40.0 + frandom( 0.00, 2.00)); }
		PISF B 1 { A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH); A_WeaponOffset(1.0 + frandom(-0.25, 0.25), 38.0 + frandom(-0.25, 0.25)); }
		PISG A 1   A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH)
		PISG AAAAA 1 A_WeaponReady
		PISG A 0 A_Refire
		Goto Ready
	AltFire:
		PISA D 1 { A_WeaponOffset(- 2.0, 32.0); A_PlaySound("weapons/pistol/charge", CHAN_WEAPON); }
		PISA D 1   A_WeaponOffset(- 6.0, 32.0)
		PISA C 1   A_WeaponOffset(-12.0, 31.5)
		PISA C 1   A_WeaponOffset(-16.0, 31.0)
		PISA B 1   A_WeaponOffset(-18.0, 30.5)
	AltHold:
		PISA A 1 {
			if(CountInv("ArgPistolCharge") < 45) {
				A_GiveInventory("ArgPistolCharge");
				A_WeaponOffset(-20.0 + frandom(CountInv("ArgPistolCharge") * -0.025, CountInv("ArgPistolCharge") * 0.025)
				,               30.0 + frandom(CountInv("ArgPistolCharge") * -0.025, CountInv("ArgPistolCharge") * 0.025)
				);
				return state(0);
			} else {
				A_WeaponOffset(-20.0 + frandom(-0.25, 0.25), 30.0 + frandom(-0.25, 0.25));
				return state("AltHoldChargeSound");
			}
		}
		PISA A 0 A_JumpIf(CallACS("SynthFire"), "AltShoopDaWoop")
		PISA A 0 A_Refire
		Goto AltDown
	AltHoldChargeSound:
		PISA A 0 {
			if(CountInv("ArgPistolChargeSound") == 23) {
				A_PlaySound("weapons/pistol/hum", CHAN_WEAPON, 1.0, true);
			}
			A_GiveInventory("ArgPistolChargeSound");
		}
	AltHoldCharged:
		PISA A 1 A_JumpIf(CallACS("SynthFire"), "AltShoopDaWoop")
		PISA A 0 A_Refire
		Goto AltDown
	AltShoopDaWoop:
		PISB A 1 Bright {
			A_GunFlash;
			A_AlertMonsters;
			A_FireBullets(1.5, 1, 1, 2*CountInv("ArgPistolCharge"), "ArgPistolPuff", FBF_NORANDOM);
			A_PlaySound("weapons/pistol/altfire", CHAN_7);
			A_StopSound(CHAN_WEAPON);
		}
		PISB B 1
		PISB C 1 { A_WeaponOffset(-19.0 + frandom(-0.25, 0.25), 31.0 + frandom(-0.25, 0.25)); }
		PISB C 1 { A_WeaponOffset(-18.0 + frandom( 0.00, 1.00), 35.0 + frandom( 0.00, 1.00)); }
		PISB B 1 { A_WeaponOffset(-17.0 + frandom( 0.00, 1.00), 38.0 + frandom( 0.00, 2.00)); }
		PISB B 1 { A_WeaponOffset(-19.0 + frandom(-0.25, 0.25), 36.0 + frandom(-0.25, 0.25)); }
		PISA A 1   A_WeaponOffset(-12.0, 38.0)
		PISA A 1   A_WeaponOffset(-15.5, 35.0)
		PISA A 1   A_WeaponOffset(-17.5, 33.0)
		PISA A 1   A_WeaponOffset(-19.0, 31.0)
		PISA A 8   A_WeaponOffset(-20.0, 30.0)
	AltDown:
		PISA B 1 {
			A_StopSound(CHAN_WEAPON);
			A_TakeInventory("ArgPistolCharge"     , 45);
			A_TakeInventory("ArgPistolChargeSound", 30);
			A_ClearRefire;
			A_WeaponOffset(-18.0, 30.5);
		}
		PISA C 1 A_WeaponOffset(-16.0, 31.0)
		PISA C 1 A_WeaponOffset(-12.0, 31.5)
		PISA D 1 A_WeaponOffset(- 6.0, 32.0)
		PISA D 1 A_WeaponOffset(- 2.0, 32.0)
		PISG A 0 A_Refire("AltFire")
		Goto Ready
	Flash:
		TNT1 A 2 Bright A_Light1
		Goto LightDone
	}
}
ACTOR ArgPistolCharge      : ArgToken { Inventory.MaxAmount 45 }
ACTOR ArgPistolChargeSound : ArgToken { Inventory.MaxAmount 30 }
ACTOR ArgPistolShootyToken : ArgToken {} // extra token for sound control

ACTOR ArgPistolPuff : ArgBulletPuff
{
    +HITMASTER
    +PUFFGETSOWNER
    +PUFFONACTORS
    +ALWAYSPUFF
	Translation "80:111=[143,143,255]:[0,0,83]", "160:167=[143,143,255]:[0,0,83]", "208:223=[143,143,255]:[0,0,83]", "224:231=[143,143,255]:[199,199,255]"
	States
	{
	XDeath:
	    TNT1 A 0
		TNT1 A 0 ACS_NamedExecuteWithResult ("Orange_TagMonster")
	Spawn:
		XPUF Q 0 BRIGHT
		XPUF Q 0 A_SpawnItemEx("ArgPuffSmoke",0,0,4.0+0.1*random(-10,10),0,0,0,0,SXF_CLIENTSIDE,0)
		XPUF Q 0 A_Jump(128,"PuffMirrored")
	PuffNormal:
		XPUF QRSTU 1 BRIGHT
		XPUF FGH 1 BRIGHT
		Stop
	PuffMirrored:
		XPUF VWXYZ 1 BRIGHT
		XPUF NOP 1 BRIGHT
		Stop
	}
}

Actor ArgPistolTag : Inventory
{
    Inventory.MaxAmount 350
}
