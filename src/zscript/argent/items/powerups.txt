// --------------------------------------------------------------------------
//
// ARGENT: Powerups
//
// --------------------------------------------------------------------------

class ArgPowerup : CustomInventory
{
	Default
	{
		Inventory.PickupSound "items/powerup";
		Inventory.MaxAmount 0;

		+COUNTITEM
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.FANCYPICKUPSOUND
	}
}

// -- Berserk --

class ArgVerserkWow : Berserk replaces Berserk
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_BERSERK";
		Inventory.PickupSound "items/powerup";
	}

	// Eventually this will probably be a super-kickass powerup to the extreme,
	// but for now it'll fill the role of good ol' punching box (and actually
	// select the correct fist on pickup; hooray!)
	States
	{
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/berserk", CHAN_7);
		TNT1 A 0 A_GiveInventory("PowerStrength");
		TNT1 A 0 HealThing(100, 0);
		TNT1 A 0 A_SelectWeapon("ArgFist");
		Stop;
	}
}

// -- Quad --

class ArgPowerQuadDamage : PowerDamage
{
	Default
	{
		Inventory.Icon "ICONQUAD";
		DamageFactor "Normal", 4;
		Powerup.Duration -45;
		Powerup.Color "AA00FF", 0.25;
	
		+INVENTORY.ALWAYSPICKUP
	}
}
class ArgQuadDamage : ArgPowerup
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_QUAD";
	}
	States
	{
	Spawn:
		QUAD ABCDEFEDCB 3 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/quad", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerQuadDamage");
		Stop;
	}
}

// -- Haste --

class ArgPowerHasteSpeed : PowerSpeed
{
	Default
	{
		Powerup.Duration -45;
		Powerup.Color "FFCC00", 0.25;
		Inventory.Icon "ICONHSTE";
		Speed 1.5;
	
		+INVENTORY.ALWAYSPICKUP
	}
}
class ArgPowerHasteFiringSpeed : PowerDoubleFiringSpeed
{
	Default
	{
		Powerup.Duration -45;

		+INVENTORY.ALWAYSPICKUP
	}
}
class ArgHaste : ArgPowerup
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_HASTE";
	}
	States
	{
	Spawn:
		HSTE ABCDEFEDCB 3 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/haste", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerHasteSpeed");
		TNT1 A 0 A_GiveInventory("ArgPowerHasteFiringSpeed");
		Stop;
	}
}

// -- Regen --

class ArgPowerRegen : PowerRegeneration
{
	Default
	{
		Powerup.Duration -60;
		Powerup.Strength 2;
		Powerup.Color "0080FF", 0.25;
		Inventory.Icon "ICONREGN";
	
		+INVENTORY.ALWAYSPICKUP
	}
}
class ArgRegen : ArgPowerup
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_REGEN";
	}
	States
	{
	Spawn:
		REGN ABCDEFEDCB 3 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/regen", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerRegen");
		Stop;
	}
}

// -- Invuln --

class ArgPowerInvuln : PowerInvulnerable
{
	Default
	{
		Powerup.Duration -30;
		Powerup.Color 'InverseMap';
		Inventory.Icon "ICONPINV";
	
		+INVENTORY.ALWAYSPICKUP
	}
}
class ArgInvuln : ArgPowerup replaces InvulnerabilitySphere
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_INVULN";
	}
	States
	{
	Spawn:
		PINV ABCD 6 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/Invuln", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerInvuln");
		Stop;
	}
}

// -- Classic powerups w/cvar-controlled spawners --

class ArgBlurSphere : BlurSphere replaces BlurSphere
{
	Default
	{
		Inventory.PickupSound "items/powerup";
	}
	States
	{
	Spawn:
		PINS A 0 NoDelay A_JumpIf(GetCvar("arg_powerupquad"), "AltItem");
		Goto Super::Spawn;
	AltItem:
		PINS A 0 A_SpawnItemEx("ArgQuadDamage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION, 0, tid);
		PINS A 0 Thing_Remove (0);
		Stop;
	}
}

class ArgInfrared : Infrared replaces Infrared
{
	Default
	{
		Inventory.PickupSound "items/automap";
	}
	States
	{
	Spawn:
		PVIS A 0 NoDelay A_JumpIf(GetCvar("arg_poweruphaste"), "AltItem");
		Goto Super::Spawn;
	AltItem:
		PVIS A 0 A_SpawnItemEx("ArgHaste", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION, 0, tid);
		PVIS A 0 Thing_Remove (0);
		Stop;
	}
}

class ArgSoulsphere : Soulsphere replaces Soulsphere
{
	Default
	{
		Inventory.PickupSound "items/megahealth";
	}
	States
	{
	Spawn:
		SOUL A 0 NoDelay A_JumpIf(GetCvar("arg_powerupregen"), "AltItem");
		Goto Super::Spawn;
	AltItem:
		SOUL A 0 A_SpawnItemEx("ArgRegen", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION, 0, tid);
		SOUL A 0 Thing_Remove (0);
		Stop;
	}
}

// -- Misc. edits, for sound's sake --

class ArgAutomap  : Allmap   replaces Allmap   { Default { Inventory.PickupSound "items/automap"; } }
class ArgRadsuit  : Radsuit  replaces Radsuit  { Default { Inventory.PickupSound "items/powerup"; } }
class ArgBackpack : Backpack replaces Backpack { Default { Inventory.PickupSound "items/ammo"   ; } }
