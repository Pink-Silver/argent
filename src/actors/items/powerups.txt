// --------------------------------------------------------------------------
//
// ARGENT: Powerups
//
// --------------------------------------------------------------------------

ACTOR ArgPowerup : CustomInventory
{
	Inventory.PickupSound "items/powerup"
	Inventory.MaxAmount 0

	+COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.FANCYPICKUPSOUND
}

// -- Berserk --

ACTOR ArgPowerBerserk : PowerDamage
{
    DamageFactor "ArgFist", 10.0
	Inventory.Icon "ICONBZRK"
	Powerup.Duration -45
	Powerup.Colormap 0.0,0.0,0.0, 1.0,0.0,0.0
}

ACTOR ArgPowerBerserkProtection : PowerProtection
{
    DamageFactor "Normal", 0.25
	Powerup.Duration -45
}

ACTOR ArgPowerBerserkSpeed : PowerSpeed
{
    Speed 1.5
	Powerup.Duration -45
}

ACTOR ArgVerserkWow : Berserk replaces Berserk
{
	Inventory.PickupMessage "$ARG_GOT_BERSERK"
	Inventory.PickupSound "items/powerup"

	// Eventually this will probably be a super-kickass powerup to the extreme,
	// but for now it'll fill the role of good ol' punching box (and actually
	// select the correct fist on pickup; hooray!)
	States
	{
	Spawn:
		BZRK ABCDEFEDCB 3 Bright
		Loop
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/berserk", CHAN_7)
		TNT1 A 0 A_GiveInventory("ArgPowerBerserk")
		TNT1 A 0 A_GiveInventory("ArgPowerBerserkProtection")
		TNT1 A 0 A_GiveInventory("ArgPowerBerserkSpeed")
		TNT1 A 0 HealThing(100, 0)
		TNT1 A 0 A_SelectWeapon("ArgFist")
		Stop
	}
}

// -- Quad --

ACTOR ArgPowerQuadDamage : PowerDamage
{
	Inventory.Icon "ICONQUAD"
	DamageFactor "Normal", 4
	Powerup.Duration -45
	Powerup.Color "AA00FF" 0.25
}
ACTOR ArgQuadDamage : ArgPowerup
{
	Inventory.PickupMessage "$ARG_GOT_QUAD"
	States
	{
	Spawn:
		QUAD ABCDEFEDCB 3 Bright
		Loop
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/quad", CHAN_7)
		TNT1 A 0 A_GiveInventory("ArgPowerQuadDamage")
		Stop
	}
}

// -- Haste --

ACTOR ArgPowerHasteSpeed : PowerSpeed
{
	Powerup.Duration -45
	Powerup.Color "FFCC00" 0.25
	Inventory.Icon "ICONHSTE"
	Speed 1.5
}
ACTOR ArgPowerHasteFiringSpeed : PowerDoubleFiringSpeed
{
	// [XA] at the moment this doesn't really do much since the weapon
	// animations use 1-tic animations everywhere. I'll have to come up
	// with something more clever at some point.
	Powerup.Duration -45
}
ACTOR ArgHaste : ArgPowerup
{
	Inventory.PickupMessage "$ARG_GOT_HASTE"
	States
	{
	Spawn:
		HSTE ABCDEFEDCB 3 Bright
		Loop
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/haste", CHAN_7)
		TNT1 A 0 A_GiveInventory("ArgPowerHasteSpeed")
		TNT1 A 0 A_GiveInventory("ArgPowerHasteFiringSpeed")
		Stop
	}
}

// -- Regen --

ACTOR ArgPowerRegen : PowerRegeneration
{
	Powerup.Duration -60
	Powerup.Strength 2
	Powerup.Color "0080FF" 0.25
	Inventory.Icon "ICONREGN"
}
ACTOR ArgRegen : ArgPowerup
{
	Inventory.PickupMessage "$ARG_GOT_REGEN"
	States
	{
	Spawn:
		REGN ABCDEFEDCB 3 Bright
		Loop
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/regen", CHAN_7)
		TNT1 A 0 A_GiveInventory("ArgPowerRegen")
		Stop
	}
}

// -- Invuln --

ACTOR ArgPowerInvuln : PowerInvulnerable
{
	Powerup.Duration -30
	Powerup.Color InverseMap
	Inventory.Icon "ICONPINV"
}
ACTOR ArgInvuln : ArgPowerup replaces InvulnerabilitySphere
{
	Inventory.PickupMessage "$ARG_GOT_INVULN"
	States
	{
	Spawn:
		PINV ABCD 6 Bright
		Loop
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/Invuln", CHAN_7)
		TNT1 A 0 A_GiveInventory("ArgPowerInvuln")
		Stop
	}
}

// -- Classic powerups w/cvar-controlled spawners --

ACTOR ArgBlurSphere : BlurSphere replaces BlurSphere
{
	Inventory.PickupSound "items/powerup"
	States
	{
	Spawn:
		PINS A 0 NoDelay A_JumpIf(GetCvar("arg_powerupquad"), "AltItem")
		Goto Super::Spawn
	AltItem:
		PINS A 0 A_SpawnItemEx("ArgQuadDamage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION, 0, tid)
		PINS A 0 Thing_Remove (0)
		Stop
	}
}

ACTOR ArgInfrared : Infrared replaces Infrared
{
	Inventory.PickupSound "items/automap"
	States
	{
	Spawn:
		PVIS A 0 NoDelay A_JumpIf(GetCvar("arg_poweruphaste"), "AltItem")
		Goto Super::Spawn
	AltItem:
		PVIS A 0 A_SpawnItemEx("ArgHaste", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION, 0, tid)
		PVIS A 0 Thing_Remove (0)
		Stop
	}
}

ACTOR ArgSoulsphere : Soulsphere replaces Soulsphere
{
    Inventory.MaxAmount 0
	Inventory.PickupSound "items/megahealth"
	States
	{
	Spawn:
		SOUL A 0 NoDelay A_JumpIf(GetCvar("arg_powerupregen"), "AltItem")
		Goto Super::Spawn
	AltItem:
		SOUL A 0 A_SpawnItemEx("ArgRegen", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION, 0, tid)
		SOUL A 0 Thing_Remove (0)
		Stop
	}
}

// -- Misc. edits, for sound's sake --

ACTOR ArgAutomap : Allmap replaces Allmap
{
	Inventory.PickupSound "items/automap"
}
ACTOR ArgRadsuit : Radsuit replaces Radsuit
{
	Inventory.PickupSound "items/powerup"
}
ACTOR ArgBackpack : Backpack replaces Backpack
{
	Inventory.PickupSound "items/ammo"
}

// --------------------------------------------------------------------------
//
// ARGENT ORANGE: Additional Powerups
//
// --------------------------------------------------------------------------

// -- Argent Cell --

ACTOR ArgArgentCell : ArgPowerup replaces Backpack
{
	Inventory.PickupMessage "$ARG_GOT_ARGENTCELL"
	Inventory.PickupSound "items/powerup"
    
	States
	{
	Spawn:
		ARGN ABCD 6 Bright
		Loop
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("Orange_ArgentCell")
		Stop
	}
}
