// --------------------------------------------------------------------------
//
// ARGENT: Powerups
//
// --------------------------------------------------------------------------

class ArgPowerup : CustomInventory
{
	Default
	{
		Inventory.PickupSound "items/powerup";
		Inventory.MaxAmount 0;

		+COUNTITEM
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.FANCYPICKUPSOUND
	}
}

// -- Berserk --

class ArgPowerBerserk : PowerDamage
{
	Default
	{
		DamageFactor "ArgFist", 10.0;
		Inventory.Icon "ICONBZRK";
		Powerup.Duration -30;
		Powerup.Colormap 0.0,0.0,0.0, 1.0,0.0,0.0;
	
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgPowerBerserkInvulnerable : PowerInvulnerable
{
	Default
	{
		Powerup.Duration -30;
	
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgPowerBerserkSpeed : PowerSpeed
{
	Default
	{
		Speed 1.5;
		Powerup.Duration -30;
	
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgBerserk : Berserk replaces Berserk
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_BERSERK";
		Inventory.PickupSound "items/powerup";
	
		+INVENTORY.BIGPOWERUP
	}
	States
	{
	Spawn:
		BZRK ABCDEFEDCB 3 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/berserk", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerBerserk");
		TNT1 A 0 A_GiveInventory("ArgPowerBerserkInvulnerable");
		TNT1 A 0 A_GiveInventory("ArgPowerBerserkSpeed");
		TNT1 A 0 HealThing(100, 0);
		TNT1 A 0 A_SelectWeapon("ArgFist");
		Stop;
	}
}

// -- Quad --

class ArgPowerQuadDamage : PowerDamage
{
	Default
	{
		Inventory.Icon "ICONQUAD";
		DamageFactor "Normal", 4;
		Powerup.Duration -45;
		Powerup.Color "AA00FF", 0.25;
	
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgQuadDamage : ArgPowerup
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_QUAD";

		+INVENTORY.BIGPOWERUP
	}
	States
	{
	Spawn:
		QUAD ABCDEFEDCB 3 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/quad", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerQuadDamage");
		Stop;
	}
}

// -- Haste --

class ArgPowerHasteSpeed : PowerSpeed
{
	Default
	{
		Powerup.Duration -45;
		Powerup.Color "FFCC00", 0.25;
		Powerup.Colormap 0.1,0.075,0.0, 1.0,0.8,0.0;
		Inventory.Icon "ICONHSTE";
		Speed 1.5;
	
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgPowerHasteFiringSpeed : PowerDoubleFiringSpeed
{
	Default
	{
		// [XA] at the moment this doesn't really do much since the weapon
		// animations use 1-tic animations everywhere. I'll have to come up
		// with something more clever at some point.
		Powerup.Duration -45;
	
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgHaste : ArgPowerup
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_HASTE";
	}
	States
	{
	Spawn:
		HSTE ABCDEFEDCB 3 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/haste", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerHasteSpeed");
		TNT1 A 0 A_GiveInventory("ArgPowerHasteFiringSpeed");
		Stop;
	}
}

// -- Regen --

class ArgPowerRegen : PowerRegeneration
{
	Default
	{
		Powerup.Duration -60;
		Powerup.Strength 2;
		Powerup.Color "0080FF", 0.25;
		Inventory.Icon "ICONREGN";
	
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgRegen : ArgPowerup
{
	Default
	{
		Inventory.PickupMessage "$ARG_GOT_REGEN";
	}
	States
	{
	Spawn:
		REGN ABCDEFEDCB 3 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/regen", CHAN_7);
		TNT1 A 0 A_GiveInventory("ArgPowerRegen");
		Stop;
	}
}

// -- Misc. edits, for sound's sake --

class ArgSoulsphere : Soulsphere replaces Soulsphere
{
	Default
	{
		Inventory.Amount 200;
		Inventory.MaxAmount 200;
		Inventory.PickupSound "items/megahealth";
	}
}

class InvulnerabilityEffect : PowerupGiver
{
	Default
	{
		Inventory.MaxAmount 0;
		Powerup.Type "PowerInvulnerable";
		Powerup.Color 'InverseMap';

		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgInvuln : ArgPowerup replaces InvulnerabilitySphere
{
	Default
	{
		Inventory.PickupMessage "$GOTINVUL";

		+INVENTORY.BIGPOWERUP
	}
	States
	{
	Spawn:
		PINV ABCDCB 6 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/berserk", CHAN_7);
		TNT1 A 0 A_GiveInventory("InvulnerabilityEffect");
		Stop;
	}
}

class BlurEffect : PowerupGiver
{
	Default
	{
		Inventory.MaxAmount 0;
		Powerup.Type "PowerInvisibility";

		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
	}
}

class ArgBlurSphere : ArgPowerup replaces BlurSphere
{
	Default
	{
		RenderStyle 'Translucent';
		Inventory.PickupMessage "$GOTINVIS";

		+INVENTORY.BIGPOWERUP
		+VISIBILITYPULSE
	}
	States
	{
	Spawn:
		PINS ABCDCB 6 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_PlaySound("items/powerups/regen", CHAN_7);
		TNT1 A 0 A_GiveInventory("BlurEffect");
		Stop;
	}
}

class ArgInfrared : Infrared replaces Infrared
{
	Default
	{
		Inventory.PickupSound "items/automap";
	}
}
class ArgAutomap : Allmap replaces Allmap
{
	Default
	{
		Inventory.PickupSound "items/automap";
	}
}
class ArgRadsuit : Radsuit replaces Radsuit
{
	Default
	{
		Inventory.PickupSound "items/powerup";
	}
}
