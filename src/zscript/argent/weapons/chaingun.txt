// --------------------------------------------------------------------------
//
// ARGENT: Chaingun
//
// --------------------------------------------------------------------------

class ArgChaingunModSelected : ArgModToken {}
class ArgChaingunMod1Enabled : ArgToken    {}
class ArgChaingunMod2Enabled : ArgToken    {}
class ArgChaingunModCooldown : ArgToken    {}
class ArgChaingunShootyToken : ArgToken    {} // extra token for sound control
class ArgChaingunSpinnyToken : ArgToken    { Default { Inventory.MaxAmount 6; } }

class ArgChaingun : ArgModWeapon
{
	Default
	{
		Weapon.SelectionOrder 2;
		Weapon.AmmoUse 1;
		Weapon.AmmoUse2 1;
		Weapon.AmmoGive 20;
		Weapon.AmmoType "Clip";
		Weapon.AmmoType2 "Clip";
		Inventory.Icon "graphics/hud/weapon-chaingun.png";
		Inventory.PickupMessage "$ARG_GOT_CHAINGUN";
		Tag "$ARG_TAG_CHAINGUN";
		Obituary "$ARG_OB_CHAINGUN";
		DamageType "ArgChaingun";
	}
	States
	{
	Spawn:
		CHGP A -1;
		Stop;
	Ready:
		CHGG A 0;
		Goto Super::Ready;
	Deselect:
		"####" "#" 0 {
			A_SetSpeed(1.0);
			A_StopSound(CHAN_WEAPON);
			A_TakeInventory("ArgChaingunSpinnyToken", 6);
		}
		Goto DeselectLoop;
		
	/* Unmodded + Primary */

	Mod0Select:
		CHGG A 0;
		Goto SelectLoop;
	Mod0Ready:
		CHGG A 0;
		Goto ReadyLoop;
	Mod0Fire:
		"####" E 0 Bright {
			A_GunFlash();
			A_AlertMonsters();
			A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");

			if(CountInv("ArgChaingunShootyToken") == 0) {
				A_GiveInventory("ArgChaingunShootyToken");
				A_PlaySound("weapons/chaingun/fire", CHAN_5);
			} else {
				A_TakeInventory("ArgChaingunShootyToken");
				A_PlaySound("weapons/chaingun/fire", CHAN_6);
			}
			return A_JumpIfInventory("ArgChaingunSpinnyToken", 1, "Mod0Anim1");
		}
		"####" E     1 Bright { A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5)); A_PlaySound("weapons/chaingun/spinup", CHAN_WEAPON); }
		"####" A     1          A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5));
		"####" A     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5));
		"####" B     1          A_WeaponOffset(0.0                     , 32.0                     );
		"####" B     2;
		"####" CD    3;
		Goto Mod0FireEnd;
	Mod0Anim1:
		"####" E 1 Bright {
			A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5));
			if(CountInv("ArgChaingunSpinnyToken") >= 2) {
				return ResolveState("Mod0Anim2");
			}
			A_PlaySound("weapons/chaingun/spinloop", CHAN_WEAPON, 1.0, 1);
			return ResolveState(null);
		}
		"####" A     1          A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5));
		"####" B     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5));
		"####" B     1          A_WeaponOffset(0.0                     , 32.0                     );
		"####" CDA   2;
		Goto Mod0FireEnd;
	Mod0Anim2:
		"####" F     1 Bright { A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 3, "Mod0Anim3"); }
		"####" B     1          A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5));
		"####" C     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5));
		"####" C     1          A_WeaponOffset(0.0                     , 32.0                     );
		"####" D     2;
		"####" AB    1;
		Goto Mod0FireEnd;
	Mod0Anim3:
		"####" G     1 Bright { A_WeaponOffset(3.0 + frandom(-0.5, 0.5), 35.0 + frandom(-0.5, 0.5)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 4, "Mod0Anim4"); }
		"####" H     1 Bright   A_WeaponOffset(2.0 + frandom(-0.5, 0.5), 34.0 + frandom(-0.5, 0.5));
		"####" A     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5));
		"####" B     1          A_WeaponOffset(0.0                     , 32.0                     );
		"####" CD    1;
		Goto Mod0FireEnd;
	Mod0Anim4:
		"####" E     1 Bright { A_WeaponOffset(3.0 + frandom(-0.7, 0.7), 35.0 + frandom(-0.7, 0.7)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 5, "Mod0Anim5"); }
		"####" F     1 Bright   A_WeaponOffset(2.0 + frandom(-0.6, 0.6), 34.0 + frandom(-0.6, 0.6));
		"####" C     1          A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5));
		"####" D     1          A_WeaponOffset(0.0                     , 32.0                     );
		"####" A     1;
		Goto Mod0FireEnd;
	Mod0Anim5:
		"####" F     1 Bright { A_WeaponOffset(3.0 + frandom(-0.9, 0.9), 35.0 + frandom(-0.9, 0.9)); return A_JumpIfInventory("ArgChaingunSpinnyToken", 6, "Mod0Anim6"); }
		"####" G     1 Bright   A_WeaponOffset(2.0 + frandom(-0.7, 0.7), 34.0 + frandom(-0.7, 0.7));
		"####" H     1 Bright   A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5));
		"####" A     1          A_WeaponOffset(0.0                     , 32.0                     );
		Goto Mod0FireEnd;
	Mod0Anim6:
		"####" F     1 Bright   A_WeaponOffset(3.0 + frandom(-0.9, 0.9), 35.0 + frandom(-0.9, 0.9));
		"####" G     1 Bright { A_WeaponOffset(2.0 + frandom(-0.7, 0.7), 34.0 + frandom(-0.7, 0.7)); A_FireBullets(6.8, 1.0, -1, 7, "ArgBulletPuff"); A_PlaySound("weapons/chaingun/fire", CHAN_7, 0.5); }
		"####" H     1 Bright   A_WeaponOffset(1.0 + frandom(-0.5, 0.5), 33.0 + frandom(-0.5, 0.5));
		"####" E     1 Bright   A_WeaponOffset(0.0                     , 32.0                     );
		Goto Mod0FireEnd;
	Mod0FireEnd:
		"####" A 0 {
			A_WeaponOffset(0.0, 32.0);
			A_GiveInventory("ArgChaingunSpinnyToken", 1);
			return A_Refire();
		}
		"####" A 1 A_TakeInventory("ArgChaingunSpinnyToken", 6);
		"####" BCD 1;
		"####" A 2 A_PlaySound("weapons/chaingun/spindown", CHAN_WEAPON);
		"####" BCD 2;
		Goto Ready;
	Flash:
		TNT1 A 1 Bright A_Light2;
		TNT1 A 1 Bright A_Light1;
		Goto LightDone;
		
	/* Mod 1: Gatling Rotator */
		
	Mod1Select:
		CH1G A 0;
		Goto SelectLoop;
	Mod1Raise:
		// Override ModSwapUp so we can start the hand animation early.
		CH1S A 1 A_WeaponOffset(-18.0,116.0);
		CH1S A 1 A_WeaponOffset(-18.0,104.0);
		CH1S A 1 A_WeaponOffset(-18.0, 92.0);
		CH1S B 1 A_WeaponOffset(-18.0, 80.0);
		CH1S C 1 A_WeaponOffset(-18.0, 68.0);
		CH1S D 1 A_WeaponOffset(-18.0, 56.0);
		CH1S E 1 A_WeaponOffset(-18.0, 44.0);
	Mod1Swap:
		CH1S F 1 A_WeaponOffset(-18.0, 32.0);
		CH1S GHI 1;
		CH1S J 1 A_PlaySound("weapons/chaingun/mod1swap", CHAN_AUTO);
		CH1S K 1 A_WeaponOffset(-19, 32);
		CH1S L 1 A_WeaponOffset(-20, 32);
		CH1S L 1 A_WeaponOffset(-20, 32);
		CH1S L 1 A_WeaponOffset(-20, 32);
		CH1S L 1 A_WeaponOffset(-20, 32);
		CH1S L 1 A_WeaponOffset(-19, 33);
		CH1S M 1 A_WeaponOffset(-17, 35);
		CH1S N 1 A_WeaponOffset(-14, 38);
		CH1S O 1 A_WeaponOffset(-15, 37);
		CH1S P 1 A_WeaponOffset(-16, 35);
		CH1S Q 1 A_WeaponOffset(-16, 33);
		CH1S N 1 A_WeaponOffset(-15, 32);
		CH1S O 1 A_WeaponOffset(-14, 32);
		CH1S P 1 A_WeaponOffset(-12, 32);
		CH1S Q 1 A_WeaponOffset(-10, 32);
		CH1S N 1 A_WeaponOffset(- 7, 32);
		CH1S O 1 A_WeaponOffset(- 3, 32);
		CH1S R 1 A_WeaponOffset(- 1, 32);
		CH1S R 1 A_WeaponOffset(  0, 32);
		CH1S S 1;
		CH1S S 1 A_WeaponOffset(- 1, 33);
		CH1S T 1 A_WeaponOffset(- 3, 35);
		CH1S T 1 A_WeaponOffset(- 7, 39);
		CH1S T 1 A_WeaponOffset(- 8, 40);
		CH1S T 1 A_WeaponOffset(- 6, 38);
		CH1S T 1 A_WeaponOffset(- 4, 36);
		CH1S U 1 A_WeaponOffset(- 2, 34);
		CH1S V 1 A_WeaponOffset(- 0, 32);
		CH1S VWX 1;
	Mod1Ready:
		CH1G A 0;
		Goto ReadyLoop;
	Mod1Up:
	Mod1Hold:
		"####" A 3 {
			if(CallACS("SynthFire")) {
				return ResolveState("Mod0Fire");
			} else if(CountInv("ArgChaingunSpinnyToken") >= 1) {
				return ResolveState("Mod1Anim1");
			}
			A_PlaySound("weapons/chaingun/spinup", CHAN_WEAPON);
			return ResolveState(null);
		}
		"####" BCD 3;
		Goto Mod0FireEnd;
	Mod1Anim1:
		"####" A 1 Bright {
			if(CountInv("ArgChaingunSpinnyToken") >= 2) {
				return ResolveState("Mod1Anim2");
			}
			A_PlaySound("weapons/chaingun/spinloop", CHAN_WEAPON, 1.0, 1);
			return ResolveState(null);
		}
		"####" A 1;
		"####" BCDA 2;
		Goto Mod0FireEnd;
	Mod1Anim2:
		"####" B  2 A_JumpIfInventory("ArgChaingunSpinnyToken", 3, "Mod1Anim3");
		"####" CD 2;
		"####" AB 1;
		Goto Mod0FireEnd;
	Mod1Anim3:
		"####" C 1 A_JumpIfInventory("ArgChaingunSpinnyToken", 4, "Mod1Anim4");
		"####" DABCD 1;
		Goto Mod0FireEnd;
	Mod1Anim4:
		"####" A 1 A_JumpIfInventory("ArgChaingunSpinnyToken", 5, "Mod1Anim5");
		"####" BCDA 1;
		Goto Mod0FireEnd;
	Mod1Anim5:
		"####" B 1 A_JumpIfInventory("ArgChaingunSpinnyToken", 6, "Mod1Anim6");
		"####" CDA 1;
		Goto Mod0FireEnd;
	Mod1Anim6:
		"####" BCDA 1;
		Goto Mod0FireEnd;

	/* Mod 2: Mobile Turret */

	Mod2Select:
		CH2G A 0;
		Goto SelectLoop;
	Mod2Raise:
		CH2S A 0 A_WeaponOffset(-25, 0, WOF_KEEPY);
		Goto ModSwapUp;
	Mod2Swap:
		CH2S B 1 A_PlaySound("weapons/chaingun/mod2swap", CHAN_AUTO);
		CH2S CDE 1;
		CH2S F 1 A_WeaponOffset(-24, 32);
		CH2S G 1 A_WeaponOffset(-23, 32);
		CH2S H 1 A_WeaponOffset(-22, 32);
		CH2S I 1 A_WeaponOffset(-21, 32);
		CH2S J 5 A_WeaponOffset(-20, 32);
		CH2S K 1 A_WeaponOffset(-19, 32);
		CH2S L 1 A_WeaponOffset(-17, 35);
		CH2S L 1 A_WeaponOffset(-13, 38);
		CH2S L 2 A_WeaponOffset(-12, 38);
		CH2S L 1 A_WeaponOffset(-13, 38);
		CH2S M 1 A_WeaponOffset(-14, 36);
		CH2S N 1 A_WeaponOffset(-18, 34);
		CH2S O 1 A_WeaponOffset(-19, 33);
		CH2S P 1 A_WeaponOffset(-20, 32);
		CH2S Q 1;
		CH2S R 1 A_WeaponOffset(-19, 32);
		CH2S S 1 A_WeaponOffset(-17, 32);
		CH2M B 1 A_WeaponOffset(-13, 32);
		CH2S Q 1 A_WeaponOffset(-10, 32);
		CH2S R 1 A_WeaponOffset(- 7, 32);
		CH2S S 1 A_WeaponOffset(- 3, 32);
		CH2M B 1 A_WeaponOffset(- 1, 32);
		CH2S Q 1 A_WeaponOffset(  0, 32);
		CH2S R 1 A_WeaponOffset(  1, 33);
		CH2S S 1 A_WeaponOffset(  3, 35);
		CH2M A 1 A_WeaponOffset(  4, 36);
		CH2M A 1 A_WeaponOffset(  2, 34);
		CH2G A 1 A_WeaponOffset(  1, 33);
	Mod2Ready:
		CH2G A 0;
		Goto ReadyLoop;
	Mod2Up:
		CH2M A 1 {
			A_SetSpeed(0.5);
			A_PlaySound("weapons/chaingun/mod2up", CHAN_AUTO);
		}
		CH2M B 1 A_WeaponOffset(  1, 32);
		CH2M B 1 A_WeaponOffset(  3, 34);
		CH2M B 2 A_WeaponOffset(  4, 36);
		CH2M C 1;
		CH2M C 1 A_WeaponOffset(  6, 38);
		CH2M D 1 A_WeaponOffset(  5, 37);
		CH2M D 1 A_WeaponOffset(  3, 35);
		CH2M D 1 A_WeaponOffset(  1, 33);
		CH2M D 1 A_WeaponOffset(  0, 32);
		CH2M D 4;
		CH2M D 1 A_WeaponOffset(- 2, 32);
		CH2M E 1 A_WeaponOffset(- 4, 32);
		CH2M F 1 A_WeaponOffset(-10, 32);
		CH2N A 1 A_WeaponOffset(-15, 28);
		CH2N A 1 A_WeaponOffset(-18, 26);
		CH2N A 1 A_WeaponOffset(-20, 24);
	Mod2Hold:
		CH2N A 1 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "Mod2Fire");
		CH2N A 0 A_Refire();
	Mod2Down:
		CH2N A 3 {
			A_SetSpeed(1.0);
			A_PlaySound("weapons/chaingun/mod2down", CHAN_AUTO);
		}
		CH2N A 1 A_WeaponOffset(-18, 26);
		CH2N A 1 A_WeaponOffset(-15, 28);
		CH2M F 1 A_WeaponOffset(-10, 32);
		CH2M E 1 A_WeaponOffset(- 4, 32);
		CH2M D 9 A_WeaponOffset(  0, 32);
		CH2M C 1 A_WeaponOffset(  1, 32);
		CH2M C 1 A_WeaponOffset(  3, 35);
		CH2M B 1 A_WeaponOffset(  6, 38);
		CH2M A 1 A_WeaponOffset(  4, 36);
		CH2M A 1 A_WeaponOffset(  2, 34);
		CH2G A 1 A_WeaponOffset(  1, 33);
		Goto Ready;
	Mod2Fire:
		CH2N E 0 A_PlaySound("weapons/chaingun/mod2fire", CHAN_WEAPON);
		CH2N EFGH 1 Bright {
			A_GunFlash();
			A_AlertMonsters();
			A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");
			A_WeaponOffset(-20 + frandom(-1.5, 1.5), 26 + frandom(-1.0, 1.0));
			A_Quake(1, 2, 0, 8, "");
		}
		CH2N E 0 {
			if(CountInv("Clip") > 0 && GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) {
				A_PlaySound("weapons/chaingun/mod2loop", CHAN_WEAPON, 1.0, 1);
				return ResolveState("Mod2FireLoop");
			}
			return ResolveState(null);
		}
		Goto Mod2FireEnd;
	Mod2FireLoop:
		CH2N EFGH 1 Bright {
			A_GunFlash("CrazyFlash");
			A_AlertMonsters();
			A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");
			A_WeaponOffset(-20 + frandom(-1.5, 1.5), 26 + frandom(-1.0, 1.0));
			A_Quake(1, 2, 0, 8, "");
		}
	Mod2FireEnd:
		CH2N A 1 {
			if(CountInv("Clip") > 0 && GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) {
				return ResolveState("Mod2FireLoop");
			}
			A_WeaponOffset(-20, 24);
			A_PlaySound("weapons/chaingun/spindown", CHAN_WEAPON);
			return ResolveState(null);
		}
		CH2N BCD 1;
		CH2N ABCD 2;
		CH2N A 0 A_Refire();
		Goto Mod2Down;
	CrazyFlash:
		TNT1 A 1 Bright A_Light(random(0,2));
		Goto LightDone;
	}
}
